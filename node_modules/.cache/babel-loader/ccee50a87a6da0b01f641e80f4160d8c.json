{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\Web-Dev\\\\MERN\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, TextField, Button, Paper } from '@material-ui/core';\nimport useStyles from './styles';\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { createPost, updatePost } from '../../actions/Post';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  setCurrentID,\n  currentID\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const post = useSelector(state => currentID ? state.posts.find(post => post._id === currentID) : null);\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentID) {\n      dispatch(updatePost(currentID, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    handleClear();\n  };\n\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n\n  const handleClear = () => {\n    setCurrentID(null);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentID ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        label: \"Creator\",\n        name: \"creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        label: \"Title\",\n        name: \"title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        label: \"Message\",\n        name: \"message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        label: \"Tags\",\n        name: \"tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: handleClear,\n        size: \"small\",\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"jROmknlGKwA8ABTmpbfIROHCe0o=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/Asus/Documents/Web-Dev/MERN/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","Typography","TextField","Button","Paper","useStyles","FileBase","useDispatch","createPost","updatePost","useSelector","Form","setCurrentID","currentID","classes","dispatch","post","state","posts","find","_id","postData","setPostData","creator","title","message","tags","selectedFile","handleSubmit","e","preventDefault","handleClear","effect","cleanup","input","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Typography, TextField, Button, Paper } from '@material-ui/core'\r\nimport useStyles from './styles'\r\nimport FileBase from \"react-file-base64\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { createPost, updatePost } from '../../actions/Post' \r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst Form = ({ setCurrentID, currentID }) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const post = useSelector(state => currentID ? state.posts.find((post) => post._id === currentID) : null)\r\n    const [postData, setPostData] = useState({creator: \"\", title: \"\", message: \"\", tags: \"\", selectedFile: \"\"})\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(currentID){\r\n            dispatch(updatePost(currentID, postData))\r\n        }\r\n        else{\r\n            dispatch(createPost(postData))\r\n        }\r\n        handleClear()\r\n    }\r\n\r\n    useEffect(() => {\r\n        effect\r\n        return () => {\r\n            cleanup\r\n        }\r\n    }, [input])\r\n\r\n    const handleClear = () => {\r\n       setCurrentID(null)\r\n       setPostData({creator: \"\", title: \"\", message: \"\", tags: \"\", selectedFile: \"\"})\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit} >\r\n                <Typography variant=\"h6\">{currentID ? 'Editing' : 'Creating'} a Memory</Typography>\r\n                \r\n                <TextField variant=\"outlined\" label=\"Creator\" name=\"creator\" fullWidth value={postData.creator}\r\n                 onChange={(e) => setPostData({...postData, creator: e.target.value})}/>\r\n\r\n                 <TextField variant=\"outlined\" label=\"Title\" name=\"title\" fullWidth value={postData.title}\r\n                 onChange={(e) => setPostData({...postData, title: e.target.value})}/>\r\n                 \r\n                 <TextField variant=\"outlined\" label=\"Message\" name=\"message\" fullWidth value={postData.message}\r\n                 onChange={(e) => setPostData({...postData, message: e.target.value})}/>\r\n\r\n                <TextField variant=\"outlined\" label=\"Tags\" name=\"tags\" fullWidth value={postData.tags}\r\n                 onChange={(e) => setPostData({...postData, tags: e.target.value})}/>\r\n\r\n                 <div className={classes.fileInput}>\r\n                     <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({...postData, selectedFile: base64})} />\r\n                 </div>\r\n\r\n                 <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                 <Button  variant=\"contained\" color=\"secondary\" onClick={handleClear} size=\"small\" fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}